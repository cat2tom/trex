function varargout = view_doseinfo_pinnacle_setupX(varargin)
% VIEW_DOSEINFO_PINNACLE_SETUPX MATLAB code for view_doseinfo_pinnacle_setupX.fig
%      VIEW_DOSEINFO_PINNACLE_SETUPX, by itself, creates a new VIEW_DOSEINFO_PINNACLE_SETUPX or raises the existing
%      singleton*.
%
%      H = VIEW_DOSEINFO_PINNACLE_SETUPX returns the handle to a new VIEW_DOSEINFO_PINNACLE_SETUPX or the handle to
%      the existing singleton*.
%
%      VIEW_DOSEINFO_PINNACLE_SETUPX('CALLBACK',hObject,eventData,h,...) calls the local
%      function named CALLBACK in VIEW_DOSEINFO_PINNACLE_SETUPX.M with the given input arguments.
%
%      VIEW_DOSEINFO_PINNACLE_SETUPX('Property','Value',...) creates a new VIEW_DOSEINFO_PINNACLE_SETUPX or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before view_doseinfo_pinnacle_setupX_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to view_doseinfo_pinnacle_setupX_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIh

% Edit the above text to modify the response to help view_doseinfo_pinnacle_setupX

% Last Modified by GUIDE v2.5 05-Nov-2014 16:25:47

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @view_doseinfo_pinnacle_setupX_OpeningFcn, ...
                   'gui_OutputFcn',  @view_doseinfo_pinnacle_setupX_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT

%--------------------------------------------------------------------------
function view_doseinfo_pinnacle_setupX_OpeningFcn(hObject,eventdata,h,varargin)
%%
input = varargin{1};

arrayHeadings =        {'Patient Volume Name',  'PatientVolumeName';...
                        'CT to Density Table',  'CtToDensityName';...
                        'x dim',                'xdim';...
                        'y dim',                'ydim';...
                        'z dim',                'zdim';...
                        'x pixel dim',          'xpixdim';...
                        'y pixel dim',          'ypixdim';...
                        'z pixel dim',          'zpixdim';...
                        'x start',              'xstart';...
                        'y start',              'ystart';...
                        'z start',              'zstart'};
                    
rxHeadings =           {'Prescription Name',    'Name';...
                        'Monitor Units per Fx', 'RequestedMonitorUnitsPerFraction';...
                        'Prescription Dose',    'PrescriptionDose';...
                        'Prescription Percent', 'PrescriptionPercent';...
                        'Number of Fractions',  'NumberOfFractions';...
                        'Prescription ROI',     'PrescriptionRoi';...
                        'Prescription Point',   'PrescriptionPoint';...
                        'Method',               'Method';...
                        'Normalization Method', 'NormalizationMethod';...
                        'Prescription Period',  'PrescriptionPeriod';...
                        'Weight Proportional',  'WeightsProportionalTo'};                  
                    
beamHeadings =         {'Beam Name',                        'Name';...
                        'Isocenter Name',                   'IsocenterName';...
                        'Prescription Name',                'PrescriptionName';...
                        'Use POI for Rx Pt',                'UsePoiForPrescriptionPoint';...
                        'Prescription Point',               'PrescriptionPointName';...         
                        'Rx Point Depth',                   'PrescriptionPointDepth';...
                        'Rx Point Offset X',                'PrescriptionPointXOffset';...
                        'Rx Point Offset Y',                'PrescriptionPointYOffset';...
                        'Specify Dose/MU at Rx Point',      'SpecifyDosePerMuAtPrescriptionPoint';...
                        'Dose/MU at Rx Point',              'DosePerMuAtPrescriptionPoint';...
                        'Machine Name and Version',         'MachineNameAndVersion';...
                        'Modality',                         'Modality';...
                        'Machine Energy Name',              'MachineEnergyName';...
                        'Desired Localizer Name',           'DesiredLocalizerName';...
                        'Actual Localizer Name',            'ActualLocalizerName';...
                        'Display Laser Motion',             'DisplayLaserMotion';...
                        'Set Beam Type',                    'SetBeamType';...
                        'Prev Beam Type',                   'PrevBeamType';...
                        'Computation Version',              'ComputationVersion';...
                        'DoseEngine',                       'DoseEngine';...
                        'Prescription Dose',                'PrescriptionDose';...
                        'Source to Rx Point Dist',          'SourceToPrescriptionPointDistance';...
                        'Total Transmission Factor',        'TotalTransmissionFraction';...
                        'Transmission Description',         'TransmissionDescription';...
                        'Rx Point Depth',                   'PrescriptionPointDepth';...
                        'Rx Point Rad Depth',               'PrescriptionPointRadDepth';...
                        'Depth to actual Point',            'DepthToActualPoint';...
                        'SSD Actual Point',                 'SSDToActualPoint';...
                        'Rad Depth to Actual Point',        'RadDepthToActualPoint';...
                        'Rx Point Rad Depth Valid',         'PrescriptionPointRadDepthValid';...
                        'Rx Point Off Axis Distance',       'PrescriptionPointOffAxisDistance';...
                        'Unblocked Field Area at SAD',      'UnblockedFieldAreaAtSAD';...
                        'Unblocked Field Perimeter at SAD', 'UnblockedFieldPerimeterAtSAD';...
                        'Blocked Field Area at SAD',        'BlockedFieldAreaAtSAD';...
                        'Intersect Field Area at SAD',      'IntersectFieldAreaAtSAD';...
                        'Normalized Dose',                  'NormalizedDose';...
                        'Off Axis Ratio',                   'OffAxisRatio';...
                        'Collimator Output Factor',         'CollimatorOutputFactor';...
                        'Relative Output Factor',           'RelativeOutputFactor';...
                        'Phantom Output Factor',            'PhantomOutputFactor';...
                        'OF Measurement Depth',             'OFMeasurementDepth';...
                        'Output Factor Info',               'OutputFactorInfo';...
                        'Dose Volume',                      'DoseVolume';...
                        'Dose Var Volume',                  'DoseVarVolume';...
                        'Weight',                           'Weight';...
                        'Is Weight Locked',                 'IsWeightLocked';...
                        'Monitor Units Valid',              'MonitorUnitsValid'};                                 

set(h.table_array,'RowName',arrayHeadings(:,1));
set(h.table_array,'ColumnFormat',{'char'});
set(h.table_array,'ColumnName',{'Dose Array Property'});

for i = 1:size(arrayHeadings,1)
    arraytable{i,1} = input.(arrayHeadings{i,2});
end
set(h.table_array,'Data',arraytable);

%%
set(h.table_rx,'RowName',rxHeadings(:,1));
set(h.table_rx,'ColumnFormat',{'char'});
col = cell(0);
for i = 1:numel(input.prescription)
    col{end+1} = ['Prescription #',num2str(i)];
end
set(h.table_rx,'ColumnName',col);

for j = 1:numel(input.prescription)
    for i = 1:size(rxHeadings,1)
        rxtable{i,j} = input.prescription(j).(rxHeadings{i,2});
    end
end
set(h.table_rx,'Data',rxtable);

%%
set(h.table_beam,'RowName',beamHeadings(:,1));
set(h.table_beam,'ColumnFormat',{'char'});
col = cell(0);
for i = 1:numel(input.beam)
    col{end+1} = ['Beam #',num2str(i)];
end
set(h.table_beam,'ColumnName',col);

for j = 1:numel(input.beam)
    for i = 1:size(beamHeadings,1)
        beamdata{i,j} = input.beam(j).(beamHeadings{i,2});
    end
end           
set(h.table_beam,'Data',beamdata);

guidata(hObject,h)

% Choose default command line output for view_doseinfo_pinnacle_setupX
h.output = hObject;

% Update h structure
guidata(hObject,h)

% UIWAIT makes view_doseinfo_pinnacle_setupX wait for user response (see UIRESUME)
% uiwait(h.figure_doseinfo);

%--------------------------------------------------------------------------
function varargout = view_doseinfo_pinnacle_setupX_OutputFcn(hObject,eventdata,h) 
%%
varargout{1} = h.output;
