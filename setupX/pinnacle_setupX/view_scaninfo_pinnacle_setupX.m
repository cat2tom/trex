function varargout = view_scaninfo_pinnacle_setupX(varargin)
% VIEW_SCANINFO_PINNACLE_SETUPX MATLAB code for view_scaninfo_pinnacle_setupX.fig
%      VIEW_SCANINFO_PINNACLE_SETUPX, by itself, creates a new VIEW_SCANINFO_PINNACLE_SETUPX or raises the existing
%      singleton*.
%
%      H = VIEW_SCANINFO_PINNACLE_SETUPX returns the handle to a new VIEW_SCANINFO_PINNACLE_SETUPX or the handle to
%      the existing singleton*.
%
%      VIEW_SCANINFO_PINNACLE_SETUPX('CALLBACK',hObject,eventData,h,...) calls the local
%      function named CALLBACK in VIEW_SCANINFO_PINNACLE_SETUPX.M with the given input arguments.
%
%      VIEW_SCANINFO_PINNACLE_SETUPX('Property','Value',...) creates a new VIEW_SCANINFO_PINNACLE_SETUPX or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before view_scaninfo_pinnacle_setupX_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to view_scaninfo_pinnacle_setupX_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIh

% Edit the above text to modify the response to help view_scaninfo_pinnacle_setupX

% Last Modified by GUIDE v2.5 05-Nov-2014 16:25:14

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @view_scaninfo_pinnacle_setupX_OpeningFcn, ...
                   'gui_OutputFcn',  @view_scaninfo_pinnacle_setupX_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT

%--------------------------------------------------------------------------
function view_scaninfo_pinnacle_setupX_OpeningFcn(hObject,eventdata,h,varargin)
%%
input = varargin{1};

tableHeadings =        {'Patient Name',         'image_patientname';...
                        'Scan Date',            'image_date';...
                        'Scanner ID',           'image_scannerid';...
                        'Patient Position',     'image_patientpos';...
                        'Manufacturer',         'image_manufacturer';...
                        'Model',                'image_model';...
                        'x dim',                'image_xdim';...
                        'y dim',                'image_ydim';...
                        'z dim',                'image_zdim';...
                        'Bit Depth',            'image_bitpix';...
                        'x pixel dim',          'image_xpixdim';...
                        'y pixel dim',          'image_ypixdim';...
                        'z pixel dim',          'image_zpixdim';...
                        'x start',              'image_xstart';...
                        'y start',              'image_ystart';...
                        'z start',              'image_zstart';...
                        'Series UID',           'image_seriesUID';...
                        'Study Instance UID',   'image_studyinstanceUID';...
                        'Frame UID',            'image_frameUID';...
                        'Class UID',            'image_classUID';...
                        'Study ID',             'image_studyid';...
                        'Exam ID',              'image_examid';...
                        'Patient ID',           'image_patientid';...
                        'Modality',             'image_modality';...
                        'Series Description',   'image_seriesdesc';...
                        'Scan Options',         'image_scanoptions';...
                        'kVp',                  'image_kvp';...
                        'Image Type',           'image_type';...
                        'Scan Time',            'image_time';...
                        'Institution',          'image_insitution';...
                        'Station Name',         'image_stationname';...
                        'Study Description',    'image_studydesc';...
                        'Software Version',     'image_softwarever';...
                        'Scan Protocol',        'image_protocol';...
                        'Exposure Time',        'image_exposuretime';...
                        'Tube Current',         'image_tubecurrent';...
                        'Exposure',             'image_exposure';...
                        'Filter Type',          'image_filter';...
                        'Focal Spot',           'image_focalspot';...
                        'Convolution Kernel',   'image_convolutionkernel';...
                        'Rescale Intercept',    'image_rescaleintercept';...
                        'Rescale Slope',        'image_rescaleslope';...
                        'DICOM Path',           'image_dicompath'};

set(h.table_scaninfo,'RowName',tableHeadings(:,1));
set(h.table_scaninfo,'ColumnFormat',{'char'});
set(h.table_scaninfo,'ColumnName',{'Image Property'});
set(h.table_scaninfo,'ColumnWidth',{220});

for i = 1:size(tableHeadings,1)
    tabledata{i,1} = input.(tableHeadings{i,2});
end
               
set(h.table_scaninfo,'Data',tabledata);

guidata(hObject,h)

% Choose default command line output for view_scaninfo_pinnacle_setupX
h.output = hObject;

% Update h structure
guidata(hObject,h)

% UIWAIT makes view_scaninfo_pinnacle_setupX wait for user response (see UIRESUME)
% uiwait(h.figure_scaninfo);

%--------------------------------------------------------------------------
function varargout = view_scaninfo_pinnacle_setupX_OutputFcn(hObject,eventdata,h) 
%%
varargout{1} = h.output;
